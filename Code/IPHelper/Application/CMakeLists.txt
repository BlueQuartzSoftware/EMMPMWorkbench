#///////////////////////////////////////////////////////////////////////////////
#  Copyright (c) 2010, Michael A. Jackson. BlueQuartz Software
#  All rights reserved.
#  BSD License: http://www.opensource.org/licenses/bsd-license.html
#///////////////////////////////////////////////////////////////////////////////
project(IPHelperApp)

# --------------------------------------------------------------------
# Find the ITK Package
# --------------------------------------------------------------------
IF(ITK_FOUND)
  INCLUDE(${USE_ITK_FILE})
ELSE(ITK_FOUND)
  MESSAGE(FATAL_ERROR "Cannot build without ITK.  Please set ITK_DIR.")
ENDIF(ITK_FOUND)

# ------------------------------------------------------------------------------
#  Qt 4 Section
# ------------------------------------------------------------------------------
if(QT4_FOUND)
    include( ${QT_USE_FILE} )
else()
    message(FATAL_ERROR "Qt 4 is Needed for this project.")
endif(QT4_FOUND)


# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

# Set some include directories
include_directories( ${PROJECT_CODE_DIR} )
include_directories( ${PROJECT_CODE_DIR}/QtSupport )

include_directories( ${IPHelperApp_BINARY_DIR} )
include_directories( ${EIMApps_BINARY_DIR}/MXA)
include_directories( ${EIMApps_BINARY_DIR}/QtSupport )

#-- Get the current set of source files
SET( IPHelperApp_SRCS
    ${IPHelperApp_SOURCE_DIR}/main.cpp
    ${IPHelperApp_SOURCE_DIR}/IPHelperApp.cpp
)

SET (IPHelperApp_HDRS
    ${IPHelperApp_SOURCE_DIR}/IPHelperApp.h
)
cmp_IDE_SOURCE_PROPERTIES( "IPHelperApp/GUI" "${IPHelperApp_HDRS}" "${IPHelperApp_SRCS}" "0")

# --------------------------------------------------------------------
#  Get a list of the header to run 'moc' on 
# --------------------------------------------------------------------                   
SET( IPHelperApp_MOC_HDRS
    ${IPHelperApp_HDRS}
)

# --------------------------------------------------------------------
# The UI files As generated by Qt Designer
# --------------------------------------------------------------------
SET( IPHelperApp_UIS
  ${IPHelperApp_SOURCE_DIR}/UI_Files/IPHelperApp.ui
)

SET( IPHelperApp_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# --------------------------------------------------------------------
# Run MOC on the files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${IPHelperApp_RCS} ${QRC_LICENSE_FILES})

# --------------------------------------------------------------------
# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${IPHelperApp_UIS} )

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${IPHelperApp_MOC_HDRS} )

# --------------------------------------------------------------------
#-- Put the generated files into their own group for IDEs
cmp_IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}" "0")

# --------------------------------------------------------------------
# -- Finally set the Project Sources to include all the sources
SET (${PROJECT_NAME}_PROJECT_SRCS 
    ${IPHelperApp_SRCS}
    ${IPHelperApp_HDRS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)

IF(APPLE)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns)
ENDIF (APPLE)

IF(Q_WS_WIN)
    set(APPLICATION_ICON ${PROJECT_RESOURCES_DIR}/icons/ico/IPHelperApp.ico)
ENDIF(Q_WS_WIN)

# Clear the file first otherwise we get duplicates
file(WRITE ${PROJECT_BINARY_DIR}/Qt_Plugins.txt "")
FindQt4Plugins("qgif;qjpeg;qtiff" "${PROJECT_BINARY_DIR}/Qt_Plugins.txt" 
                "${PROJECT_BINARY_DIR}/LibSearchDirs.txt" 
                "imageformats" )
                
file(READ ${PROJECT_BINARY_DIR}/Qt_Plugins.txt QT_PLUGINS)
file(READ ${PROJECT_BINARY_DIR}/IPHelper_Plugins.txt IPHELPER_PLUGINS)
BuildQtAppBundle(
    TARGET ${PROJECT_NAME}
    SOURCES ${${PROJECT_NAME}_PROJECT_SRCS}
    DEBUG_EXTENSION ${EXE_DEBUG_EXTENSION}
    ICON_FILE       ${APPLICATION_ICON}
    VERSION_MAJOR ${EIMApps_VER_MAJOR}
    VERSION_MINOR ${EIMApps_VER_MINOR}
    VERSION_PATCH ${EIMApps_VER_PATCH}
    BINARY_DIR    ${${PROJECT_NAME}_BINARY_DIR}
    LINK_LIBRARIES ${QT_LIBRARIES} ${ITK_LIBRARIES} AIMLib QtSupport MXADataModel
    LIB_SEARCH_DIRS ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
    QT_PLUGINS    ${QT_PLUGINS}
    OTHER_PLUGINS ${IPHELPER_PLUGINS}
    COMPONENT     Applications
    INSTALL_DEST  "."
    )             


